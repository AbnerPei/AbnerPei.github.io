[{"content":"周末在家，天公不做美，大雨！所以，就优化一下之前的一个开源库PPMaker，可是在提交的时候，就遇到了如下的问题：\n不过，庆幸的是，刚好在我搜这个问题2小时前，有人给出了解决方案：\n 【GitHub不再支持密码验证解决方案：SSH免密与Token登录配置】\n 文中给出了3种方案，我选择了第3种：\n第①步：前往GitHub，复制SSH的url\n第②步：找到PPMaker本地目录下的config文件\n第③步：把HTTPS的url替换成SSH的url\n最后，成功了\n","date":"2022-04-08T00:00:00Z","image":"https://example.com/p/git-error-20210813/001_hu81916c18bf6a7a6f692698b21f9cc9a6_401693_120x120_fill_q75_box_smart1.jpeg","permalink":"https://example.com/p/git-error-20210813/","title":"git报错：remote/ Support for password authentication was removed on August 13, 2021的解决办法"},{"content":"一、下载Flutter SDK 1. 去Flutter官网下载最新安装包 2. 配置Flutter SDK到指定目录 二、配置Flutter开发环境 【注意】 如果Mac没有安装Homebrew,可通过下面的命令安装：\n1  /usr/bin/ruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026#34;   检查Homebrew版本：\n1 2 3 4 5 6 7  brew --version /* Homebrew 3.2.16 Homebrew/homebrew-core (git revision f7d7160e185; last commit 2021-10-12) Homebrew/homebrew-cask (git revision d101c8d60c; last commit 2021-10-12) */   2.1、进入用户home目录 1  cd ~/   2.2、打开.bash_profile并编辑 1  open .bash_profile   在.bash_profile中添加：\n1 2 3 4 5  # Flutter export PUB_HOSTED_URL=https://pub.flutter-io.cn export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn export PATH=/Users/peijianbo/Documents/Flutter/flutter/bin:$PATH # Flutter END    【提醒】 其中/Users/klcw/peijianbo/Flutter/flutter是我自己电脑对应的Flutter SDK的目录，你需要修改为你的Flutter SDK对应的目录。\n【注意】 除了export后有个空格，其它地方不要有空格。\n 2.3、command + s保存修改并关闭.bash_profile 2.4、令修改后的配置生效 1  source .bash_profile   2.5、检查Flutter开发环境是否可用 1  flutter doctor   出现如上图的终端，就说明Flutter的开发环境配置成功了。\n","date":"2022-04-08T00:00:00Z","image":"https://example.com/p/flutter-config/001_hub1ee302989cd278a3631bd31d22ba9a1_705644_120x120_fill_q75_box_smart1.jpeg","permalink":"https://example.com/p/flutter-config/","title":"Mac上Flutter开发环境配置"},{"content":"截止目前（2021-10-16）为止，要想实现下面的几种button样式（这里要考虑图片和文字间距），我所知道的方案有两种：\n  给UIButton添加分类\n  自定义UIButton\n  而在实际开发中，我们使用 方案1 应该是最多的！\n自我参加工作（2015-06）以来，对于UIButton如上图的需求就一直有，而且还有很多！说实话，我也一直困惑，苹果爸爸问什么不支持一下呢？\n也许是有人不停地给苹果爸爸提issue， 也许是苹果爸爸也遇到大量的如此需求， 也许苹果爸爸做了统计发现几乎所有APP都有UIButton这类Categroy（Swift是Extension）, 也许苹果爸爸终于闲了有时间管了， 也许\u0026hellip;， 不管怎么说，iOS15，苹果爸爸支持了！而且API也如预期的那样简单：\n1 2 3 4 5 6  var conf = UIButton.Configuration.borderedTinted() /// 设置图片的摆放（图片在上，则文字在下） conf.imagePlacement = .top /// 设置图片和文字的间距 conf.imagePadding = 10 let bt = UIButton.init(configuration: conf, primaryAction: nil)    插一句：对于configuration这样的API设计，我是非常认可的，一看就知道是干什么用的！感觉苹果爸爸也有意如此设计，比如iOS14开始的的PHPickerConfiguration等。\n 而我能发现这个，源自今天（2021-10-16）下午，打算用Swift重写老项目（《酷乐潮玩》）的一个推荐列表页，其中cell上有如下几个按钮，我想参考OC写的UIButton的category，也写个Swift版的：\n可是，在敲titleedg时，竟提示'titleEdgeInsets' will be deprecated in iOS 15.0。这瞬间激起了我的兴趣，于是点击进去一探究竟！\nSwift版UIButtonConfiguration： Objective-C版UIButtonConfiguration： 于是，我粗略地写了个demo验证一下，最终效果图：\n具体代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  class ViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. view.backgroundColor = .white test() } func test() { var conf1 = UIButton.Configuration.plain() conf1.title = \u0026#34;点赞\u0026#34; conf1.image = UIImage(named: \u0026#34;liked\u0026#34;) conf1.imagePlacement = .leading conf1.imagePadding = 10 let bt1 = UIButton.init(configuration: conf1, primaryAction: nil) var conf2 = UIButton.Configuration.bordered() conf2.title = \u0026#34;点赞\u0026#34; conf2.image = UIImage(named: \u0026#34;liked\u0026#34;) conf2.imagePlacement = .trailing conf2.imagePadding = 40 let bt2 = UIButton.init(configuration: conf2, primaryAction: nil) var conf3 = UIButton.Configuration.borderedTinted() conf3.title = \u0026#34;点赞\u0026#34; conf3.image = UIImage(named: \u0026#34;liked\u0026#34;) conf3.imagePlacement = .top conf3.imagePadding = 10 let bt3 = UIButton.init(configuration: conf3, primaryAction: nil) var conf4 = UIButton.Configuration.gray() conf4.title = \u0026#34;点赞\u0026#34; conf4.image = UIImage(named: \u0026#34;liked\u0026#34;) conf4.imagePlacement = .bottom conf4.imagePadding = 10 let bt4 = UIButton.init(configuration: conf4, primaryAction: nil) bt1.frame = CGRect(x: 50, y: 100, width: 100, height: 80) bt2.frame = CGRect(x: 200, y: 100, width: 150, height: 80) bt3.frame = CGRect(x: 50, y: 230, width: 100, height: 80) bt4.frame = CGRect(x: 200, y: 230, width: 100, height: 80) view.addSubview(bt1) view.addSubview(bt2) view.addSubview(bt3) view.addSubview(bt4) } }   最后，话又说回来了，目前我们的APP不可能是从iOS15开始的，估计大多数是从iOS11开始的，还有一部分是从iOS9开始，也有一部分是从iOS13开始的，所以 做好兼容还是很有必要的！\n而更多关于UIButton的新知，请自行查看API学习，总体感觉：UIButton更丰富多彩了！\n","date":"2021-10-16T00:00:00Z","image":"https://example.com/p/ios-ios15-uibutton-update-api/001_hud2968a3b07ec39bf5208ed157fdd1854_589473_120x120_fill_q75_box_smart1.jpeg","permalink":"https://example.com/p/ios-ios15-uibutton-update-api/","title":"iOS15终于迎来了UIButton的这个改动！"},{"content":"PPMaker是什么❓ 声明：PPMaker跟Masonry功能上是完全不同的库，PPMaker是快速便捷创建UI/attributedText等的，而Masonry是布局的。\n 做iOS开发，创建UI控件，必须的不说，还多，尤其你新入手一个项目。\n我自己写代码，向来想省事：怎么能不一个一个属性写？ 带着这个问题，我刚开始创建了各种Tool来处理，后来用Category，可Category有个烦人的问题：有些属性我不需要但是方法参数有，而有些属性我需要方法参数没有。\n昨天，看到臧成威的如何利用Objective-C写一个精美的DSL，挺好，就想着优化下自己的代码，于是就有了 PPMaker.\n在此，献上对臧老师的感谢。\n PPMaker的不同（优点） ①、链式调用，代码简洁\n②、点语法后面有提示（Masonry是没有的 ）\n③、不需要终结词，臧老师给的示例有\n④、不需要助词 （如Masonry中的with），这个也可以说是一个缺点吧\n⑤、pod可根据需求随意选择\n⑥、不需要的属性，根本不用管 主要对比Category\nPPMaker的用法 第一步、导入PPMaker\n 方法一、使用CocoaPods安装  1  pod \u0026#39;PPMaker\u0026#39;, \u0026#39;~\u0026gt; 0.0.22\u0026#39;    方法二、手动下载拖入  第二步、用对应的类（如:UILable）直接调用pp_\n使用示例：创建一个简单的UILabel对象\n maker调用，直接调UILabel对象的属性，如text、textColor、frame等，当然也有自定义的，如intoView表示要加到哪个view上、fontSize实际上[UIFont systemFontOfSize:fontSize]的简化等等。\n总之，PPMaker is very easy to use。\n 回顾：创建UI控件的路程 起初：一个属性一个属性赋值 1 2 3 4 5 6 7  UILabel *lb = [[UILabel alloc]initWithFrame:CGRectMake(10, 10, 300, 50)]; [self.view addSubview:lb]; lb.backgroundColor = [UIColor whiteColor]; lb.text = @\u0026#34;我是一个lb\u0026#34;; lb.textColor = [UIColor blueColor]; lb.textAlignment = NSTextAlignmentCenter; lb.font = [UIFont systemFontOfSize:18];  \n后来：用Category快速创建\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  @interface UILabel (EasyMake) +(UILabel *)lbMakeWithSuperV:(UIView *)superV frame:(CGRect)frame font:(UIFont *)font alignment:(NSTextAlignment)alignment text:(NSString *)text textColor:(UIColor *)textColor; @implementation UILabel (EasyMake) +(UILabel *)lbMakeWithSuperV:(UIView *)superV frame:(CGRect)frame font:(UIFont *)font alignment:(NSTextAlignment)alignment text:(NSString *)text textColor:(UIColor *)textColor { UILabel *lb = [[UILabel alloc]init]; if (superV) { [superV addSubview:lb]; } if (font) { lb.font = font; } if (text) { lb.text = text; } if (textColor) { lb.textColor = textColor; } lb.frame = frame; lb.textAlignment = alignment; return lb; } @end   现在：链式调用的DSL\n结语 PPMaker是自己写的最满意的一个库之一，解决了自己一直以来创建UI、配置attributedText 的苦恼，这其中也参考了一些大神的的blog和开源库，在此，表示感谢。今天，分享自己的这个库，希望帮助像我一样的同学，其次，希望觉得好的，给个star。\n当然了，这个库，我会持续更新的，有什么问题，欢迎提出来。或者谁有更好的做法，热烈欢迎告知一下，深表谢意！\n","date":"2018-05-09T00:00:00Z","image":"https://example.com/p/ios%E9%93%BE%E5%BC%8F%E5%88%9B%E5%BB%BAui%E7%BB%88%E7%BB%93%E8%80%85-ppmaker/001_hu430edf9d2db7476eced1313be9fc990b_137786_120x120_fill_q75_box_smart1.jpeg","permalink":"https://example.com/p/ios%E9%93%BE%E5%BC%8F%E5%88%9B%E5%BB%BAui%E7%BB%88%E7%BB%93%E8%80%85-ppmaker/","title":"iOS链式创建UI终结者 ➜ PPMaker"}]